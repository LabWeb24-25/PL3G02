@model IEnumerable<LibSpace_Aspnet.Models.Livro>

@{
    ViewData["Title"] = "Livros";
}

<div class="container-fluid">
    <div class="books-page">
        <div class="header-section">
            <h2 class="section-title">Livros</h2>
            @if (!string.IsNullOrEmpty(ViewData["Query"]?.ToString()))
            {
                <h4 class="search-results-title">Resultados para: "@ViewData["Query"]"</h4>
            }
            <div class="filter-section">
                <a href="@Url.Action("Index", new { filter = "clicks" })" 
                   class="btn btn-light btn-primary"
                   data-ajax="true"
                   data-ajax-method="GET"
                   data-ajax-mode="replace"
                   data-ajax-update="#booksContainer">
                    <i class="fas fa-sort-numeric-down"></i> Cliques
                </a>
                
                <select id="filter-author" name="authorId" class="form-select"
                        data-ajax="true"
                        data-ajax-method="GET"
                        data-ajax-mode="replace"
                        data-ajax-update="#booksContainer">
                    <option value="">Filtrar por Autor</option>
                    @foreach (var autor in ViewBag.Autores)
                    {
                        <option value="@autor.IdAutor">@autor.NomeAutor</option>
                    }
                </select>

                <select id="filter-editor" name="editorId" class="form-select"
                        data-ajax="true"
                        data-ajax-method="GET"
                        data-ajax-mode="replace"
                        data-ajax-update="#booksContainer">
                    <option value="">Filtrar por Editora</option>
                    @foreach (var editora in ViewBag.Editoras)
                    {
                        <option value="@editora.IdEditora">@editora.NomeEditora</option>
                    }
                </select>

                <select id="filter-country" name="countryId" class="form-select"
                        data-ajax="true"
                        data-ajax-method="GET"
                        data-ajax-mode="replace"
                        data-ajax-update="#booksContainer">
                    <option value="">Filtrar por País</option>
                    @foreach (var pais in ViewBag.Paises)
                    {
                        <option value="@pais.IdPais">@pais.NomePais</option>
                    }
                </select>
            </div>
        </div>

        <div id="booksContainer">
            @await Html.PartialAsync("_LivroesPartial", Model)
        </div>
    </div>
</div>

<style>
    .books-page {
        padding: 2rem;
    }

    .header-section {
        margin-top: 1rem;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .filter-section {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .form-select {
        max-width: 200px;
    }

    .section-title {
        color: #004d40;
        margin: 0;
    }

    .book-card {
        height: 100%;
        max-height: 350px;
        display: flex;
        flex-direction: column;
        border: none;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease-in-out;
        max-width: 100%;
    }

    .book-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .card-img-top {
        background: #f6f6f6;
        width: 100%;
        height: auto;
        object-fit: contain;
        aspect-ratio: 2/3;
    }

    .card-body {
        flex: 0 1 auto;
        padding: 1rem;
        height: auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
    }

    .book-title {
        color: #004d40;
        font-size: 1.1rem;
        margin-bottom: 0.2rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .book-author {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 0.2rem;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .book-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .book-link:hover {
        text-decoration: none;
        color: inherit;
    }

    /* Column sizing for book grid */
    .col {
        max-width: 200px;
        min-width: 150px;
    }

    /* Responsive styles */
    @@media (max-width: 1200px) {
        .col {
            max-width: 180px;
            min-width: 140px;
        }
        
        .book-card {
            max-height: 320px;
        }
    }

    @@media (max-width: 992px) {
        .col {
            max-width: 160px;
            min-width: 130px;
        }
        
        .book-card {
            max-height: 300px;
        }
        .card-body {
            padding: 0.75rem;
        }
        .book-title {
            margin-bottom: 0.1rem;
            -webkit-line-clamp: 1;
        }
    }

    @@media (max-width: 768px) {
        .books-page {
            padding: 1rem;
        }
        .col {
            max-width: 140px;
            min-width: 120px;
        }
        
        .book-card {
            max-height: 280px;
        }
        
        .book-title {
            font-size: 0.9rem;
        }
        
        .book-author {
            font-size: 0.8rem;
        }
        .card-body {
            padding: 0.5rem;
        }
    }

    @@media (max-width: 576px) {
        .books-page {
            padding: 0.5rem;
        }
        .col {
            max-width: 130px;
            min-width: 110px;
        }
        
        .book-card {
            max-height: 260px;
        }
        .card-body {
            padding: 0.4rem;
        }
    }

    .search-results-title {
        color: #666;
        font-size: 1.1rem;
        margin: 0;
        font-style: italic;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const filters = ['author', 'editor', 'country'];
        filters.forEach(filter => {
            document.getElementById(`filter-${filter}`).addEventListener('change', function() {
                const url = new URL(window.location.origin + '@Url.Action("Index", "Livroes")');
                url.searchParams.set(`${filter}Id`, this.value);
                
                fetch(url, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    document.getElementById('booksContainer').innerHTML = html;
                })
                .catch(error => console.error('Error:', error));
            });
        });
    });
</script>
