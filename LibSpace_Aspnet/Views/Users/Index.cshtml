@using Microsoft.AspNetCore.Identity
@model LibSpace_Aspnet.Models.UsersViewModel
@{
    ViewData["Title"] = "Gestão de Utilizadores";
}


@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject UserManager<IdentityUser> _userManager
@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="user-management-container">
    <div class="header-section">
        <h2 class="section-title">Gestão de Utilizadores</h2>
    </div>

    <div class="users-list-container mb-4">
        <div class="list-header" onclick="toggleSection('pending-list')">
            <h3 class="list-title">
                <i class="fas fa-chevron-down section-toggle"></i>
                Bibliotecários Pendentes
            </h3>
        </div>
        
        <div id="pending-list" class="section-content">
            <div class="search-section mb-3">
                <div class="search-container">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" class="search-input" placeholder="Procurar bibliotecário pendente..." 
                           onkeyup="searchUsers('pending-users', this.value)">
                </div>
            </div>

            <div class="users-list" id="pending-users">
                @if (!Model.PendingBibliotecarios.Any(b => !b.IsApproved))
                {
                    <div class="empty-state">
                        <i class="fas fa-info-circle"></i>
                        <p>Não existem bibliotecários pendentes no momento.</p>
                    </div>
                }
                else
                {
                    @foreach (var pending in Model.PendingBibliotecarios.Where(b => !b.IsApproved && b.AspNetUser != null))
                    {
                        <div class="user-item">
                            <div class="user-info">
                                <div class="user-avatar">
                                    <i class="fas fa-user-clock"></i>
                                </div>
                                <div class="user-details">
                                    <div class="user-name">@(pending.AspNetUser?.UserName ?? "N/A")</div>
                                    <div class="user-email">@(pending.AspNetUser?.Email ?? "N/A")</div>
                                    <div class="user-pending-date">
                                        Pendente desde: @(pending.ApplicationDate != default ? pending.ApplicationDate.ToShortDateString() : "N/A")
                                    </div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(pending.AspNetUserId))
                            {
                                <div class="user-actions">
                                    <form asp-action="ApproveBibliotecario" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@pending.AspNetUserId" />
                                        <button type="submit" class="btn btn-success action-btn" title="Aprovar">
                                            <i class="fas fa-check"></i> Aprovar
                                        </button>
                                    </form>
                                    
                                    <form asp-action="RejectBibliotecario" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@pending.AspNetUserId" />
                                        <button type="submit" class="btn btn-danger action-btn" title="Rejeitar">
                                            <i class="fas fa-times"></i> Rejeitar
                                        </button>
                                    </form>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="users-list-container">
        <div class="list-header" onclick="toggleSection('all-users-list')">
            <h3 class="list-title">
                <i class="fas fa-chevron-down section-toggle"></i>
                Todos os Utilizadores
            </h3>
        </div>

        <div id="all-users-list" class="section-content">
            <div class="search-section">
                <div class="search-container">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" class="search-input" placeholder="Procurar utilizador..." 
                           onkeyup="searchUsers('all-users', this.value)">
                </div>
            </div>

            <form asp-action="Index" method="get" class="filters-form">
                <div class="filters-container">
                    <select asp-for="SelectedRole" class="form-select" onchange="this.form.submit()">
                        <option value="">Todos os Papéis</option>
                        <option value="Admin">Admin</option>
                        <option value="Bibliotecario">Bibliotecário</option>
                        <option value="Leitor">Leitor</option>
                    </select>

                    <select asp-for="IsBlocked" class="form-select" onchange="this.form.submit()">
                        <option value="">Estado de Bloqueio</option>
                        <option value="true">Bloqueados</option>
                        <option value="false">Não Bloqueados</option>
                    </select>
                </div>
            </form>

            <div class="users-list" id="all-users">
                @foreach (var user in Model.AllUsers)
                {
                    <div class="user-item">
                        <div class="user-info">
                            <div class="user-avatar">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="user-details">
                                <div class="user-name">@user.UserName</div>
                                <div class="user-email">@user.Email</div>
                                <div class="user-roles">
                                    @if (Model.UserRoles.ContainsKey(user.Id))
                                    {
                                        foreach (var role in Model.UserRoles[user.Id])
                                        {
                                            string badgeClass = role.ToLower() switch
                                            {
                                                "bibliotecario" => "badge-bibliotecario",
                                                "leitor" => "badge-leitor",
                                                "admin" => "badge-admin",
                                                _ => "badge-role"
                                            };
                                            
                                            <span class="badge-role @badgeClass">@role</span>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="user-actions">
                            <button class="btn btn-light action-btn" title="Detalhes"
                                    onclick="showUserDetails('@user.Id')">
                                <i class="fas fa-cog"></i> Detalhes
                            </button>
                            
                            @if (await _userManager.IsLockedOutAsync(user))
                            {
                                <button type="button" class="btn btn-success action-btn" title="Desbloquear"
                                        onclick="showUnblockModal('@user.Id')">
                                    <i class="fas fa-unlock"></i> Desbloquear
                                </button>
                            }
                            else 
                            {
                                <button class="btn btn-light action-btn text-danger" 
                                        onclick="showBlockModal('@user.Id')" 
                                        title="Bloquear">
                                    <i class="fas fa-ban"></i> Bloquear
                                </button>
                            }
                            
                            @if (!Model.UserRoles[user.Id].Contains("Admin"))
                            {
                                <form asp-action="DeleteUser" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <button type="submit" class="btn btn-danger action-btn" 
                                            onclick="return confirm('Tem certeza que deseja eliminar este utilizador? Esta ação não pode ser desfeita.')"
                                            title="Eliminar">
                                        <i class="fas fa-times"></i> Eliminar
                                    </button>
                                </form>
                            }

                            @if (Model.UserRoles[user.Id].Contains("Bibliotecario"))
                            {
                                <form asp-action="RevokeBibliotecarioRole" method="post" style="display: inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <button type="submit" class="btn btn-warning action-btn" title="Revogar Bibliotecário"
                                            onclick="return confirm('Tem certeza que deseja revogar o papel de Bibliotecário deste utilizador?')">
                                        <i class="fas fa-user-minus"></i> Revogar Bibliotecário
                                    </button>
                                </form>
                            }

                            @if (!Model.UserRoles[user.Id].Contains("Admin"))
                            {
                                <form asp-action="PromoteUsertoAdmin" asp-controller="Users" method="post" style="display: inline;" id="promoteForm-@user.Id">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <button type="submit" class="btn btn-light action-btn" title="Promover" 
                                            onclick="return confirm('Tem certeza que deseja promover o utilizador para administrador?')">
                                        <i class="fas fa-star text-warning"></i> Promover
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<turbo-frame id="user-details">
    <div id="userDetailsModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalhes do Utilizador</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <!-- Partial view will load here -->
                </div>
            </div>
        </div>
    </div>
</turbo-frame>

<div class="modal fade" id="promoteConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Promoção</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja promover este utilizador para Administrador?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="confirmPromote()">Confirmar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="revokeConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Revogação</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja revogar o papel de Bibliotecário deste utilizador?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-warning" onclick="confirmRevoke()">Confirmar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="blockUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Bloquear Utilizador</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="BlockUser" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" name="userId" id="blockUserId" />
                    <div class="mb-3">
                        <label for="blockReason" class="form-label">Motivo do Bloqueio</label>
                        <textarea class="form-control" id="blockReason" name="blockReason" 
                                rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox" id="blockForever" name="blockForever" value="true">
                            <input type="hidden" name="blockForever" value="false" />
                            <label class="form-check-label" for="blockForever">
                                Bloquear permanentemente
                            </label>
                        </div>
                        <div id="untilDateGroup">
                            <label for="blockUntil" class="form-label">Bloquear até</label>
                            <input type="date" class="form-control" id="blockUntil" name="blockUntil"
                                   min="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Confirmar Bloqueio</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="unblockConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Desbloqueio</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="UnblockUser" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" name="userId" id="unblockUserId" />
                    <p>Tem certeza que deseja desbloquear este utilizador?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-success">Confirmar Desbloqueio</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <!-- Font Awesome for the remove button icon (optional if you use text "X") -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    <!-- Custom CSS for styling (ensure this path is correct) -->
   <link rel="stylesheet" href="~/css/users.css" />

}

<style>
.list-header {
    cursor: pointer;
    padding: 10px 0;
    display: flex;
    align-items: center;
}

.list-header:hover {
    background-color: #f8f9fa;
}

.section-toggle {
    margin-right: 10px;
    transition: transform 0.3s ease;
}

.section-toggle.collapsed {
    transform: rotate(-90deg);
}

.section-content {
    transition: all 0.3s ease-out;
    overflow: hidden;
    opacity: 1;
    max-height: 2000px;
}

.section-content.collapsed {
    max-height: 0;
    opacity: 0;
    padding: 0;
    margin: 0;
}

.empty-state {
    text-align: center;
    padding: 2rem;
    color: #6c757d;
}

.empty-state i {
    font-size: 2rem;
    margin-bottom: 1rem;
}

.empty-state p {
    margin: 0;
    font-size: 1rem;
}

.user-details-container {
    padding: 1rem;
}

.profile-header {
    display: flex;
    align-items: center;
    margin-bottom: 2rem;
}

.profile-image {
    width: 100px;
    height: 100px;
    margin-right: 1rem;
    border-radius: 50%;
    overflow: hidden;
    background-color: #f8f9fa;
    display: flex;
    align-items: center;
    justify-content: center;
}

.profile-image img, .profile-image i {
    width: 100%;
    height: 100%;
    object-fit: cover;
    font-size: 40px;
    color: #6c757d;
    display: flex;
    align-items: center;
    justify-content: center;
}

.profile-title {
    flex: 1;
}

.profile-title h4 {
    margin: 0;
    color: #333;
}

.details-section {
    display: grid;
    gap: 1rem;
}

.detail-item {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    background: #f8f9fa;
    border-radius: 0.5rem;
}

.detail-item i {
    margin-right: 1rem;
    color: #6c757d;
    width: 20px;
    text-align: center;
}

.badge {
    background-color: #17a2b8;
    color: white;
    padding: 0.5em 1em;
    border-radius: 1rem;
    font-weight: normal;
}

.filters-container {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
}

.filters-form select {
    min-width: 150px;
}

.search-section {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
    margin-bottom: 1rem;
}

.search-container {
    flex: 1;
    min-width: 200px;
}

.sort-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
}

.sort-btn i {
    font-size: 0.9em;
}
</style>

<script>
function toggleSection(sectionId) {
    const content = document.getElementById(sectionId);
    const icon = content.previousElementSibling.querySelector('.section-toggle');
    
    if (content.classList.contains('collapsed')) {
        content.classList.remove('collapsed');
        icon.classList.remove('collapsed');
        content.style.maxHeight = content.scrollHeight + 'px';
    } else {
        content.classList.add('collapsed');
        icon.classList.add('collapsed');
        content.style.maxHeight = '0';
    }
}

function searchUsers(containerId, searchText) {
    const container = document.getElementById(containerId);
    const items = container.getElementsByClassName('user-item');
    
    searchText = searchText.toLowerCase();
    
    Array.from(items).forEach(item => {
        const userName = item.querySelector('.user-name').textContent.toLowerCase();
        const userEmail = item.querySelector('.user-email').textContent.toLowerCase();
        
        if (userName.includes(searchText) || userEmail.includes(searchText)) {
            item.style.display = '';
        } else {
            item.style.display = 'none';
        }
    });
}

document.addEventListener('DOMContentLoaded', () => {
    const sections = document.getElementsByClassName('section-content');
    Array.from(sections).forEach(section => {
        section.classList.remove('collapsed');
        section.style.maxHeight = section.scrollHeight + 'px';
    });
});

function showUserDetails(userId) {
    $.get('/Users/GetUserDetails', { userId: userId })
        .done(function(response) {
            $('#userDetailsModal .modal-body').html(response);
            var modal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
            modal.show();
        })
        .fail(function(error) {
            alert('Erro ao carregar detalhes do utilizador');
            console.error('Error:', error);
        });
}

function showBlockModal(userId) {
    document.getElementById('blockUserId').value = userId;
    var modal = new bootstrap.Modal(document.getElementById('blockUserModal'));
    modal.show();
}

document.getElementById('blockForever').addEventListener('change', function() {
    const untilDateGroup = document.getElementById('untilDateGroup');
    const blockUntil = document.getElementById('blockUntil');
    
    if (this.checked) {
        untilDateGroup.style.display = 'none';
        blockUntil.removeAttribute('required');
        blockUntil.value = '9999-12-31';
    } else {
        untilDateGroup.style.display = 'block';
        blockUntil.setAttribute('required', '');
        blockUntil.value = '';
    }
});

function showUnblockModal(userId) {
    document.getElementById('unblockUserId').value = userId;
    var modal = new bootstrap.Modal(document.getElementById('unblockConfirmModal'));
    modal.show();
}

</script>